/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Jframes;

import baseDatos.DatabaseConnection;
import codigo.Factura;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author PC GAMER 2
 */
public final class Facturas extends javax.swing.JFrame {

    /**
     * Creates new form Facturas
     */
    public Facturas() {
        initComponents();
        setTitle("Gestión de Facturas");
        setLocationRelativeTo(null);
        setResizable(false);
        llenarTabla();
        //cargarFacturas();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        btnVolverMenu = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        Agregar_fac = new javax.swing.JButton();
        borrar_fac1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Gestión de Facturas");

        btnVolverMenu.setText("Volver Al Menu");
        btnVolverMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverMenuActionPerformed(evt);
            }
        });

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Numero Factura", "Codigo de Producto"
            }
        ));
        jScrollPane3.setViewportView(jTable3);

        Agregar_fac.setText("Agregar Factura");
        Agregar_fac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Agregar_facActionPerformed(evt);
            }
        });

        borrar_fac1.setText("Eliminar Factura");
        borrar_fac1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrar_fac1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(156, 156, 156)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Agregar_fac)
                            .addComponent(borrar_fac1))))
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnVolverMenu)
                    .addContainerGap(515, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Agregar_fac)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(borrar_fac1)))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnVolverMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(226, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVolverMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverMenuActionPerformed
        // TODO add your handling code here:
        Menu menu = new Menu();
        menu.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolverMenuActionPerformed

    private void Agregar_facActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Agregar_facActionPerformed
        // TODO add your handling code here:
        String numeroFacturaStr = JOptionPane.showInputDialog(this, "Ingrese el número de factura:");
        if (numeroFacturaStr == null || numeroFacturaStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El número de factura no puede estar vacío.");
            return;
        }

        String codProductoStr = JOptionPane.showInputDialog(this, "Ingrese el código del producto:");
        if (codProductoStr == null || codProductoStr.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El código de producto no puede estar vacío.");
            return;
        }

        int numeroFactura;
        int codProducto;

        try {
            numeroFactura = Integer.parseInt(numeroFacturaStr);
            codProducto = Integer.parseInt(codProductoStr);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "El número de factura y el código de producto deben ser números.");
            return;
        }

        DatabaseConnection conexion = new DatabaseConnection();
        conexion.conectarJ();

        Factura factura = new Factura(conexion.getConnection());

        boolean success = factura.AgregarFactura(numeroFactura, codProducto);

        if (success) {
            JOptionPane.showMessageDialog(this, "Factura agregada exitosamente.");

            // Si quieres refrescar la tabla después de agregar la factura, puedes llamar a este método:
            llenarTabla();  // Asegúrate de que llenarTabla actualice correctamente la tabla con los datos más recientes
        } else {
            JOptionPane.showMessageDialog(this, "Error al agregar la factura.");
        }

    }//GEN-LAST:event_Agregar_facActionPerformed

    private void borrar_fac1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrar_fac1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable3.getSelectedRow();

        // Verificar si se ha seleccionado una fila
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Por favor, seleccione una factura para eliminar.");
            return;
        }

        // Obtener el número de factura de la fila seleccionada
        int numeroFactura = (int) jTable3.getValueAt(selectedRow, 0); // La columna 0 es la "Número de Factura"

        // Crear una instancia de DatabaseConnection y establecer la conexión
        DatabaseConnection conexion = new DatabaseConnection();
        conexion.conectarJ();  // Establecer la conexión a la base de datos
        Connection conn = conexion.getConnection(); // Obtener la conexión

        // Verificar si la conexión fue exitosa
        if (conn == null) {
            JOptionPane.showMessageDialog(this, "No se pudo conectar a la base de datos.");
            return;
        }

        // Crear la clase Factura y llamar al método eliminarFactura con la conexión obtenida
        Factura factura = new Factura(conn);
        boolean success = factura.eliminarFactura(numeroFactura);

        if (success) {
            // Mostrar mensaje de éxito y recargar las facturas
            JOptionPane.showMessageDialog(this, "Factura eliminada exitosamente.");

            // Recargar las facturas en la tabla para reflejar la eliminación
            llenarTabla();
        } else {
            // Si hubo un error, mostrar mensaje de error
            JOptionPane.showMessageDialog(this, "Error al eliminar la factura.");
        }

    }//GEN-LAST:event_borrar_fac1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Facturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Facturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Facturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Facturas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Facturas().setVisible(true);
            }
        });
    }

    public void llenarTabla() {
        DatabaseConnection conexion = new DatabaseConnection();
        conexion.conectarJ();

        Factura Factura = new Factura(conexion.getConnection());
        DefaultTableModel model = Factura.ObtenerFacturas();

        if (model.getRowCount() > 0) {
            jTable3.setModel(model);
            System.out.println("Datos añadidos a la tabla.");
        } else {
            System.out.println("No se encontraron datos para mostrar.");
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Agregar_fac;
    private javax.swing.JButton borrar_fac1;
    private javax.swing.JButton btnVolverMenu;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable3;
    // End of variables declaration//GEN-END:variables
}
